logging:
  level:
    org.springframework: DEBUG
    org.hibernate: DEBUG
    com.zaxxer.hikari: DEBUG
spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://db-airflow.c9ey8eai2kkp.ap-northeast-2.rds.amazonaws.com:3306/airflow?serverTimezone=Asia/Seoul&characterEncoding=UTF-8
    username: admin # RDS ????
    password: 1q2w3e4r! # RDS ????
  jpa:
    database: mysql
    database-platform: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: create
    generate-ddl: false
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 36282424110-0km648e8j6e5i46v2vsre8rjfgt6mq0d.apps.googleusercontent.com
            client-secret: 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
            redirect-uri: "http://localhost:8081/login/oauth2/code/google"
            scope:
              - email
              - profile
          naver:
            client-id: SoCGXgkbeenb0805p8BQ
            client-secret: jZLsurnTpW
            client-name: Naver
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8081/login/oauth2/code/naver
            scope:
              - name
              - email
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

jwt:
  secret:
    key: 7J2064W467Kg7J207IWY7Lqg7ZSE7IiY6rCV7IOd67aE65Ok7ZmU7J207YyF7ZWY7IS47JqU7KKL7J2A7ZqM7IKs7JeQ66qo65GQ7Leo7JeF7ISx6rO17ZWY7Iuk6rGw652866+/7Iq164uI64uk65287J2067iM7IS47IWY65Ok7Ja07KO87IWU7ISc6rCQ7IKs7ZWp64uI64uk64+E7JuA7J2065CY7JeI7Jy866m07KKL6rKg7Iq164uI64uk

jasypt:
  encryptor:
    password: jasyptStringEncryptor  # ??? ???


cloud:
  aws:
    credentials:
      access-key: ${AWS_ACCESS_KEY}
      secret-key: ${AWS_SECRET_KEY}
    region:
      static: ap-northeast-2  # AWS S3 리전
    stack:
      auto: false

application:
  bucket:
    name: joo-legend  # AWS S3 버킷 이름

  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 50MB
    file:
      upload-dir: /uploads  # 허용된 업로드 경로 설정
